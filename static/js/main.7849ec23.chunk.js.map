{"version":3,"sources":["components/TableBody/index.js","components/TableHead/index.js","components/EmployeesTable/index.js","components/Container/index.js","components/Title/index.js","components/ShowCard/index.js","App.js","index.js"],"names":["TableBody","employees","handleShowCard","map","emp","onClick","id","scope","firstName","lastName","role","TableHead","props","className","handleSortById","handleFNascend","handleFNdesc","handleLNascend","handleLNdesc","value","select","onChange","event","handleRoleSelect","target","roles","EmployeesTable","sortById","sortByFirstNameAscend","sortByFirstNameDesc","sortByLastNameAscend","sortByLastNameDesc","showOnlyOfRole","showCard","Container","children","Title","ShowCard","phoneNumber","email","closeCard","App","state","show","empid","emps","sort","a","b","localeCompare","console","log","setState","allEmployees","newEmpList","filter","roleArray","this","forEach","push","Set","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4qCAiBeA,MAff,YAAqD,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eAChC,OACE,gCACGD,EAAUE,KAAI,SAAAC,GAAG,OAChB,qBAAiBC,QAAS,kBAAMH,EAAeE,EAAIE,KAAnD,UACE,oBAAIC,MAAM,MAAV,SAAiBH,EAAIE,KACrB,6BAAKF,EAAII,YACT,6BAAKJ,EAAIK,WACT,6BAAKL,EAAIM,SAJFN,EAAIE,UCyBNK,MA7Bf,SAAoBC,GAClB,OACE,uBAAOC,UAAU,aAAjB,SACE,+BACE,oBAAIN,MAAM,MAAMM,UAAU,OAAOR,QAASO,EAAME,eAAhD,iBACA,qBAAIP,MAAM,MAAV,wBACE,sBAAMM,UAAU,YAAYR,QAASO,EAAMG,eAA3C,sBACA,sBAAMF,UAAU,YAAYR,QAASO,EAAMI,aAA3C,wBAFkB,aAIpB,qBAAIT,MAAM,MAAV,uBACE,sBAAMM,UAAU,OAAOR,QAASO,EAAMK,eAAtC,sBACA,sBAAMJ,UAAU,OAAOR,QAASO,EAAMM,aAAtC,wBAFkB,YAIpB,oBAAIX,MAAM,MAAV,SACA,8BACI,8BACE,wBAAQY,MAAOP,EAAMQ,OAAQC,SAAU,SAACC,GAAD,OAAWV,EAAMW,iBAAiBD,EAAME,OAAOL,QAAtF,SACGP,EAAMa,MAAMtB,KAAI,SAAAO,GAAI,OACnB,wBAAQS,MAAOT,EAAf,SAAiCA,GAAPA,aALhB,cCWbgB,MArBf,SAAwBd,GACtB,OACE,wBAAOC,UAAU,QAAjB,UACE,cAAC,EAAD,CACEY,MAAOb,EAAMa,MACbL,OAAQR,EAAMQ,OACdN,eAAgBF,EAAMe,SACtBZ,eAAgBH,EAAMgB,sBACtBZ,aAAcJ,EAAMiB,oBACpBZ,eAAgBL,EAAMkB,qBACtBZ,aAAcN,EAAMmB,mBACpBR,iBAAkBX,EAAMoB,iBAE1B,cAAC,EAAD,CACE/B,UAAWW,EAAMX,UACjBC,eAAgBU,EAAMqB,e,MCbfC,MAJf,SAAmBtB,GACjB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,EAAMuB,Y,MCG5BC,MAJf,SAAexB,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAMuB,Y,MCgBvBE,MAjBf,SAAkBzB,GAEhB,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACGD,EAAMR,IAAI,GAAGI,UADhB,KAC6BI,EAAMR,IAAI,GAAGK,YAE1C,sBAAKI,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,2BAA0CD,EAAMR,IAAI,GAAGkC,eACvD,oBAAGzB,UAAU,YAAb,oBAAiCD,EAAMR,IAAI,GAAGmC,MAA9C,QACA,uCAAU3B,EAAMR,IAAI,GAAGM,QACvB,wBAAQG,UAAU,oBAAoBR,QAAS,kBAAMO,EAAM4B,aAA3D,0B,OCyHOC,E,4MA/HbC,MAAQ,CACNC,MAAM,EACNC,MAAO,EACP3C,YACAwB,MAAO,CAAC,OACRL,OAAQ,O,EAYVQ,sBAAwB,WAGtB,IAAIiB,EAAO,EAAKH,MAAMzC,UAGtB4C,EAAKC,MAAK,SAAUC,EAAGC,GACrB,OAAOD,EAAEvC,UAAUyC,cAAcD,EAAExC,cAGrC0C,QAAQC,IAAIN,GACZ,EAAKO,SAAS,CAAEnD,UAAW4C,K,EAI7BhB,oBAAsB,WACpB,IAAIgB,EAAO,EAAKH,MAAMzC,UAEtB4C,EAAKC,MAAK,SAAUC,EAAGC,GACrB,OAAOA,EAAExC,UAAUyC,cAAcF,EAAEvC,cAGrC0C,QAAQC,IAAIN,GACZ,EAAKO,SAAS,CAAEnD,UAAW4C,K,EAI7Bf,qBAAwB,WACtB,IAAIe,EAAO,EAAKH,MAAMzC,UAEtB4C,EAAKC,MAAK,SAAUC,EAAGC,GACrB,OAAOD,EAAEtC,SAASwC,cAAcD,EAAEvC,aAEpC,EAAK2C,SAAS,CAAEnD,UAAW4C,K,EAI7Bd,mBAAsB,WACpB,IAAIc,EAAO,EAAKH,MAAMzC,UAEtB4C,EAAKC,MAAK,SAAUC,EAAGC,GACrB,OAAOA,EAAEvC,SAASwC,cAAcF,EAAEtC,aAEpC,EAAK2C,SAAS,CAAEnD,UAAW4C,K,EAI7BlB,SAAW,WAET,IAAIkB,EAAO,EAAKH,MAAMzC,UAEtB4C,EAAKC,MAAK,SAAUC,EAAGC,GACrB,OAAOD,EAAEzC,GAAG2C,cAAcD,EAAE1C,OAE9B,EAAK8C,SAAS,CAAEnD,UAAW4C,K,EAI7BZ,SAAW,SAAC3B,GACV,EAAK8C,SAAS,CAAET,MAAM,IACtB,EAAKS,SAAS,CAAER,MAAOtC,K,EAIzBkC,UAAY,WACV,EAAKY,SAAS,CAAET,MAAM,K,EAIxBX,eAAiB,SAACb,GAEhB,IAAIkC,EAAepD,EAGnB,GAFA,EAAKmD,SAAS,CAAEhC,OAAQD,IACxB,EAAKiC,SAAS,CAAEnD,UAAWoD,IACZ,QAAVlC,EAAkB,CACrB,IAAMmC,EAAaD,EAAaE,QAAO,SAAAnD,GAAG,OAAIA,EAAIM,OAASS,KAC3D,EAAKiC,SAAS,CAAEnD,UAAWqD,M,kEApF7B,IAAIE,EAAYC,KAAKf,MAAMjB,MAC3BgC,KAAKf,MAAMzC,UAAUyD,SAAQ,SAAAtD,GAC3BoD,EAAUG,KAAKvD,EAAIM,SAErB+C,KAAKL,SAAS,CAAE3B,MAAM,YAAK,IAAImC,IAAIJ,Q,+BAoF3B,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,kCACEC,KAAKf,MAAMC,MACX,cAAC,EAAD,CACE1C,UAAWwD,KAAKf,MAAMzC,UACtBwB,MAAOgC,KAAKf,MAAMjB,MAClBL,OAAQqC,KAAKf,MAAMtB,OACnBQ,sBAAuB6B,KAAK7B,sBAC5BC,oBAAqB4B,KAAK5B,oBAC1BC,qBAAsB2B,KAAK3B,qBAC3BC,mBAAoB0B,KAAK1B,mBACzBC,eAAgByB,KAAKzB,eACrBL,SAAU8B,KAAK9B,SACfM,SAAUwB,KAAKxB,WAGlBwB,KAAKf,MAAMC,MACV,cAAC,EAAD,CACEvC,IAAKqD,KAAKf,MAAMzC,UAAUsD,QAAO,SAAAnD,GAAG,OAAIA,EAAIE,KAAO,EAAKoC,MAAME,SAC9DJ,UAAWiB,KAAKjB,mB,GAvHVqB,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7849ec23.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TableBody ( { employees, handleShowCard }) {\r\n  return (\r\n    <tbody>\r\n      {employees.map(emp => (\r\n        <tr key={emp.id} onClick={() => handleShowCard(emp.id)}>\r\n          <th scope=\"row\">{emp.id}</th>\r\n          <td>{emp.firstName}</td>\r\n          <td>{emp.lastName}</td>\r\n          <td>{emp.role}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nexport default TableBody;","import React from \"react\";\r\n\r\nfunction TableHead (props) {\r\n  return (\r\n    <thead className=\"thead-dark\">\r\n      <tr>\r\n        <th scope=\"col\" className=\"sort\" onClick={props.handleSortById}> # </th>\r\n        <th scope=\"col\" key=\"firstName\"> First Name \r\n          <span className=\"sort mp-4\" onClick={props.handleFNascend}> &#9650; </span>\r\n          <span className=\"sort mp-4\" onClick={props.handleFNdesc}> &#9660; </span>\r\n        </th>\r\n        <th scope=\"col\" key=\"lastName\"> Last Name\r\n          <span className=\"sort\" onClick={props.handleLNascend}> &#9650; </span>\r\n          <span className=\"sort\" onClick={props.handleLNdesc}> &#9660; </span>\r\n        </th>\r\n        <th scope=\"col\" key=\"role\"> \r\n        <div>\r\n            <div> \r\n              <select value={props.select} onChange={(event) => props.handleRoleSelect(event.target.value)}>\r\n                {props.roles.map(role => (\r\n                  <option value={role} key={role}>{role}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHead;","import React from \"react\";\nimport \"./style.css\";\nimport TableBody from \"../TableBody\";\nimport TableHead from \"../TableHead\";\n\nfunction EmployeesTable(props) {\n  return (\n    <table className=\"table\">\n      <TableHead \n        roles={props.roles}\n        select={props.select}\n        handleSortById={props.sortById}\n        handleFNascend={props.sortByFirstNameAscend}\n        handleFNdesc={props.sortByFirstNameDesc}\n        handleLNascend={props.sortByLastNameAscend}\n        handleLNdesc={props.sortByLastNameDesc}\n        handleRoleSelect={props.showOnlyOfRole}\n      />\n      <TableBody \n        employees={props.employees}\n        handleShowCard={props.showCard}\n      />\n    </table>\n  )\n}\n\nexport default EmployeesTable;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ShowCard(props) {\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        {props.emp[0].firstName}  {props.emp[0].lastName}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Phone Number: {props.emp[0].phoneNumber}</h5>\r\n        <p className=\"card-text\">EMAIL: {props.emp[0].email}  </p>\r\n        <p>ROLE: {props.emp[0].role}</p>\r\n        <button className=\"btn btn-secondary\" onClick={() => props.closeCard()}>Close</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCard;","import React, { Component } from \"react\";\nimport EmployeeTable from './components/EmployeesTable';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ShowCard from './components/ShowCard';\nimport employees from './employees.json';\n\nclass App extends Component {\n  state = {\n    show: false,\n    empid: 0,\n    employees,\n    roles: [\"All\"],\n    select: \"All\"\n  }\n\n  componentDidMount() {\n    let roleArray = this.state.roles;\n    this.state.employees.forEach(emp => {\n      roleArray.push(emp.role);\n    });\n    this.setState({ roles: [...new Set(roleArray)]});\n  }\n\n  // Sort the employees by first name in ascending order\n  sortByFirstNameAscend = () => {\n    // console.log(\"In sort By first Name\");\n\n    let emps = this.state.employees;\n    // emps.sort(sortByProperty(\"firstName\"));\n\n    emps.sort(function (a, b) {\n      return a.firstName.localeCompare(b.firstName);\n    })\n    // emps.sort();\n    console.log(emps);\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by first name in descending order\n  sortByFirstNameDesc = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return b.firstName.localeCompare(a.firstName);\n    })\n    // emps.sort();\n    console.log(emps);\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by last name in ascending order\n  sortByLastNameAscend  = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return a.lastName.localeCompare(b.lastName);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by last name in descending order\n  sortByLastNameDesc  = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return b.lastName.localeCompare(a.lastName);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Sorting the rows by id\n  sortById = () => {\n    // console.log(\"In sortById\");\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Show card is to enable required parameters\n  showCard = (id) => {\n    this.setState({ show: true });\n    this.setState({ empid: id });\n  };\n\n  // reset the parameters\n  closeCard = () => {\n    this.setState({ show: false });\n  };\n\n  // Show employees of a certain role\n  showOnlyOfRole = (value) => {\n    // console.log(\"Show only Role based: \" + value);\n    let allEmployees = employees;\n    this.setState({ select: value })\n    this.setState({ employees: allEmployees });\n    if ( value !== \"All\" ) {\n      const newEmpList = allEmployees.filter(emp => emp.role === value);\n      this.setState({ employees: newEmpList });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Title>Employee Directory</Title>\n        {!this.state.show && (\n          <EmployeeTable\n            employees={this.state.employees}\n            roles={this.state.roles}\n            select={this.state.select}\n            sortByFirstNameAscend={this.sortByFirstNameAscend}\n            sortByFirstNameDesc={this.sortByFirstNameDesc}\n            sortByLastNameAscend={this.sortByLastNameAscend}\n            sortByLastNameDesc={this.sortByLastNameDesc}\n            showOnlyOfRole={this.showOnlyOfRole}\n            sortById={this.sortById}\n            showCard={this.showCard}\n          />\n        )}\n        {this.state.show && (\n          <ShowCard\n            emp={this.state.employees.filter(emp => emp.id === this.state.empid)}\n            closeCard={this.closeCard}\n          />\n        )}\n      </Container>\n\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}