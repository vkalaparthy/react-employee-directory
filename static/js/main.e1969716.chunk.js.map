{"version":3,"sources":["components/EmployeesTable/index.js","components/Container/index.js","components/Title/index.js","components/ShowCard/index.js","App.js","index.js"],"names":["EmployeesTable","props","className","scope","onClick","sortById","sortByFirstNameAscend","sortByFirstNameDesc","sortByLastNameAscend","sortByLastNameDesc","value","select","onChange","event","showOnlyOfRole","target","roles","map","role","employees","emp","showCard","id","firstName","lastName","Container","children","Title","ShowCard","phoneNumber","email","closeCard","App","state","show","empid","emps","sort","a","b","localeCompare","console","log","setState","allEmployees","newEmpList","filter","roleArray","this","forEach","push","Set","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1969716.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeesTable(props) {\n  return (\n    <table className=\"table\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\" className=\"sort\" onClick={() => props.sortById()}> # </th>\n          <th scope=\"col\" key=\"firstName\"> First Name \n            <span className=\"sort mp-4\" onClick={() => props.sortByFirstNameAscend()}> &#9650; </span>\n            <span className=\"sort mp-4\" onClick={() => props.sortByFirstNameDesc()}> &#9660; </span>\n          </th>\n          <th scope=\"col\" key=\"lastName\"> Last Name\n            <span className=\"sort\" onClick={() => props.sortByLastNameAscend()}> &#9650; </span>\n            <span className=\"sort\" onClick={() => props.sortByLastNameDesc()}> &#9660; </span>\n          </th>\n          <th scope=\"col\" key=\"role\"> \n          <div>\n              <div> \n                <select value={props.select} onChange={(event) => props.showOnlyOfRole(event.target.value)}>\n                  {props.roles.map(role => (\n                    <option value={role} key={role}>{role}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.map(emp => (\n          <tr key={emp.id} onClick={() => props.showCard(emp.id)}>\n          <th scope=\"row\">{emp.id}</th>\n          <td>{emp.firstName}</td>\n          <td>{emp.lastName}</td>\n          <td>{emp.role}</td>\n        </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default EmployeesTable;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ShowCard(props) {\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        {props.emp[0].firstName}  {props.emp[0].lastName}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Phone Number: {props.emp[0].phoneNumber}</h5>\r\n        <p className=\"card-text\">EMAIL: {props.emp[0].email}  </p>\r\n        <p>ROLE: {props.emp[0].role}</p>\r\n        <button className=\"btn btn-secondary\" onClick={() => props.closeCard()}>Close</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCard;","import React, { Component } from \"react\";\nimport EmployeeTable from './components/EmployeesTable';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ShowCard from './components/ShowCard';\nimport employees from './employees.json';\n\nclass App extends Component {\n  state = {\n    show: false,\n    empid: 0,\n    employees,\n    roles: [\"All\"],\n    select: \"All\"\n  }\n\n  componentDidMount() {\n    let roleArray = this.state.roles;\n    this.state.employees.forEach(emp => {\n      roleArray.push(emp.role);\n    });\n    this.setState({ roles: [...new Set(roleArray)]});\n  }\n\n  // Sort the employees by first name in ascending order\n  sortByFirstNameAscend = () => {\n    // console.log(\"In sort By first Name\");\n\n    let emps = this.state.employees;\n    // emps.sort(sortByProperty(\"firstName\"));\n\n    emps.sort(function (a, b) {\n      return a.firstName.localeCompare(b.firstName);\n    })\n    // emps.sort();\n    console.log(emps);\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by first name in descending order\n  sortByFirstNameDesc = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return b.firstName.localeCompare(a.firstName);\n    })\n    // emps.sort();\n    console.log(emps);\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by last name in ascending order\n  sortByLastNameAscend  = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return a.lastName.localeCompare(b.lastName);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Sort the employees by last name in descending order\n  sortByLastNameDesc  = () => {\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return b.lastName.localeCompare(a.lastName);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Sorting the rows by id\n  sortById = () => {\n    // console.log(\"In sortById\");\n    let emps = this.state.employees;\n\n    emps.sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    })\n    this.setState({ employees: emps });\n  };\n\n  // Show card is to enable required parameters\n  showCard = (id) => {\n    this.setState({ show: true });\n    this.setState({ empid: id });\n  };\n\n  // reset the parameters\n  closeCard = () => {\n    this.setState({ show: false });\n  };\n\n  // Show employees of a certain role\n  showOnlyOfRole = (value) => {\n    // console.log(\"Show only Role based: \" + value);\n    let allEmployees = employees;\n    this.setState({ select: value })\n    this.setState({ employees: allEmployees });\n    if ( value !== \"All\" ) {\n      const newEmpList = allEmployees.filter(emp => emp.role === value);\n      this.setState({ employees: newEmpList });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Title>Employee Directory</Title>\n        {!this.state.show && (\n          <EmployeeTable\n            employees={this.state.employees}\n            roles={this.state.roles}\n            select={this.state.select}\n            sortByFirstNameAscend={this.sortByFirstNameAscend}\n            sortByFirstNameDesc={this.sortByFirstNameDesc}\n            sortByLastNameAscend={this.sortByLastNameAscend}\n            sortByLastNameDesc={this.sortByLastNameDesc}\n            showOnlyOfRole={this.showOnlyOfRole}\n            sortById={this.sortById}\n            showCard={this.showCard}\n          />\n        )}\n        {this.state.show && (\n          <ShowCard\n            emp={this.state.employees.filter(emp => emp.id === this.state.empid)}\n            closeCard={this.closeCard}\n          />\n        )}\n      </Container>\n\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}